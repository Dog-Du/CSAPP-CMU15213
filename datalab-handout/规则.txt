整型：
  允许:
  1. 整型常量 0 - 255. 不允许使用大整型。
  2. 函数参数和局部变量，不允许使用全局变量
  3. 一元整型运算符
  4. 二进制整型运算符

  禁止 :
  1. 使用任何控制语句，eg : if, do, while ,for ,switch
  2. 使用或者定义宏
  3. 在这个文件中定义任何额外的函数
  4. 调用任何函数
  5. 使用额外的操作符， eg : &&, ||, - ,?;
  6. 使用任何类型的类型转换
  7. 使用任何 int 之外的类型。这意味着不能使用数组，结构体，共用体。


  假设：
  1. 使用二进制补码(2s complement), int 为32位
  2. 算术右移
  3. 左右移小于0或者大于31时，行为不可预测。

浮点型：

  对于浮点型问题，编码规则不那么严格。你可以使用循环和条件控制。
  你可以使用 int ，unsigned。
  你可以使用任意 int 和 unsigned 常量。
  你可以使用任何运算，逻辑或者比较运算在 int 或者 unsigned 数据，


  禁止：
    1. 使用或者定义宏
    2. 在这个文件中定义其他函数
    3. 调用任何函数
    4. 使用任何形式的类型转换。
    5. 使用任何数据类型除了 int 或者 unsigned。这意味这你不能使用数组，结构体，或者共用体。
    6. 使用任何浮点数据类型，操作或者常量。 （好家伙，浮点数类型的问题却不让使用浮点数）

注意：
  1. 使用 dlc (data lab checker) 来检查你的代码是否合法。
  2. 每个函数都有最大数的操作 (int, logical或者比较)， 在你的函数的实现中。
    最大操作数被 dlc 检查。注意，赋值操作不会计算，你可以使用它任意多次，而不受罚。
  3. 使用 btest 检查你的函数的正确性。
  4. 使用 BDD 检查器来规范你的函数
  5. 操作数最大限度，在函数中被给出。